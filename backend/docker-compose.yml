version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  ingestor-service:
    build:
      context: ./ingestor-service
    container_name: ingestor-service
    env_file:
      - .env
    depends_on:
      - postgres
    ports:
      - "8000:8000"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672"  # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  qdrant:
    image: qdrant/qdrant:v1.2.0
    ports:
      - "6333:6333"
      - "8081:80" # UI
    volumes:
      - qdrant_storage:/qdrant/storage

  embedder:
    build:
      context: ./embedding-service 
    container_name: embedding-service 
    depends_on:
      - qdrant
      - postgres
      - rabbitmq
    environment:
      QDRANT_HOST: ${QDRANT_HOST}
      QDRANT_PORT: ${QDRANT_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

  retriever:
    build:
      context: ./retriever-service
    container_name: retriever-service
    ports:
      - "8008:8008"
    depends_on:
      - qdrant
      - rabbitmq
    environment:
      QDRANT_HOST: ${QDRANT_HOST}
      QDRANT_PORT: ${QDRANT_PORT}


  summarizer:
    build:
      context: ./summarizer
    container_name: summarizer
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - rabbitmq
      - retriever
volumes:
  pgdata:
  qdrant_storage:
